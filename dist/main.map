{"version":3,"sources":["main.js"],"names":["cpClassList","el","document","body","contains","Error","lists","getList","x","length","indexOf","push","className","toString","replace","splice","remove","add","index","oldClassName","newClassName","classNames","split","classList","window","module","exports"],"mappings":"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","file":"main.map","sourceRoot":"..\\src","sourcesContent":["class cpClassList {\r\n  constructor(el) {\r\n    if (document.body.contains(el))\r\n      this.el = el;\r\n    else\r\n      throw new Error(\"Node Expected\");\r\n  }\r\n\r\n  add(...classes) {\r\n    const lists = this.getList();\r\n    for (let x = 0; x < classes.length; x++) {\r\n      if (lists.indexOf(classes[x]) < 0) {\r\n        lists.push(classes[x]);\r\n      }\r\n    }\r\n    this.el.className = lists.toString().replace(/,/g, \" \");\r\n    return this;\r\n  }\r\n  remove(...classes) {\r\n    const lists = this.getList();\r\n    for (let x = 0; x < classes.length; x++) {\r\n      if (lists.indexOf(classes[x]) >= 0) {\r\n        lists.splice(lists.indexOf(classes[x]), 1);\r\n      }\r\n    }\r\n    this.el.className = lists.toString().replace(/,/g, \" \");\r\n    return this;\r\n  }\r\n\r\n  toggle(className) {\r\n    const lists = this.getList();\r\n    if (lists.indexOf(className) >= 0)\r\n      this.remove(className);\r\n    else\r\n      this.add(className);\r\n    return this;\r\n  }\r\n\r\n  item(index) {\r\n    if (typeof index === \"number\") {\r\n      const lists = this.getList();\r\n      return lists[index] || false;\r\n    } else\r\n      throw new Error(\"Index should be an integer\");\r\n  }\r\n\r\n  contains(className) {\r\n    const lists = this.getList();\r\n    if (lists.indexOf(className) >= 0) return true;\r\n    else return false;\r\n  }\r\n\r\n\r\n  replace(oldClassName, newClassName) {\r\n    const lists = this.getList();\r\n    if (lists.indexOf(oldClassName) >= 0) {\r\n      lists[lists.indexOf(oldClassName)] = newClassName;\r\n      this.el.className = lists.toString().replace(/,/g, \" \");\r\n      return this;\r\n    } else\r\n      return false;\r\n  }\r\n  getList() {\r\n    const classNames = this.el.className;\r\n    return classNames.split(/\\s+/g);\r\n  }\r\n}\r\n\r\nfunction classList(el) {\r\n  return new cpClassList(el);\r\n}\r\nif (window) {\r\n  window.cpClassList = classList;\r\n}\r\n\r\nmodule.exports = classList;"]}